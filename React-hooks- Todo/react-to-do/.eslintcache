[{"/home/vivek/Documents/Byte_Academy/React/React-hooks- Todo/react-to-do/src/reportWebVitals.js":"1","/home/vivek/Documents/Byte_Academy/React/React-hooks- Todo/react-to-do/src/App.js":"2","/home/vivek/Documents/Byte_Academy/React/React-hooks- Todo/react-to-do/src/components/Todo.js":"3","/home/vivek/Documents/Byte_Academy/React/React-hooks- Todo/react-to-do/src/index.js":"4","/home/vivek/Documents/Byte_Academy/React/React-hooks- Todo/react-to-do/src/components/Todoform.js":"5","/home/vivek/Documents/Byte_Academy/React/React-hooks- Todo/react-to-do/src/components/Todolist.js":"6"},{"size":362,"mtime":1606357874863,"results":"7","hashOfConfig":"8"},{"size":1595,"mtime":1624358963906,"results":"9","hashOfConfig":"8"},{"size":499,"mtime":1624356369597,"results":"10","hashOfConfig":"8"},{"size":500,"mtime":1606357874859,"results":"11","hashOfConfig":"8"},{"size":516,"mtime":1624355337542,"results":"12","hashOfConfig":"8"},{"size":4745,"mtime":1606794500354,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"y9gavb",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},"/home/vivek/Documents/Byte_Academy/React/React-hooks- Todo/react-to-do/src/reportWebVitals.js",[],["31","32"],"/home/vivek/Documents/Byte_Academy/React/React-hooks- Todo/react-to-do/src/App.js",["33","34"],"import React, {useEffect} from 'react';\nimport './App.css';\nimport Todo from './components/Todo';\nimport Todoform from './components/Todoform';\nimport Todolist from './components/Todolist';\nimport axios from 'axios';\n\nfunction App() {\n  const [todos, setTodos] = React.useState([]);\n  //   {\n  //     text: \"Learn about React\",\n  //     isCompleted: false\n  //   },\n  //   {\n  //     text: \"Meet friend for lunch\",\n  //     isCompleted: false\n  //   },\n  //   {\n  //     text: \"Build really cool todo app\",\n  //     isCompleted: false\n  //   }\n  // ]);\n\n  useEffect(async () => {\n    const result = await axios(\n      'https://jsonplaceholder.typicode.com/todos',\n    );\n    console.log(result.data)\n    let fav=[];\n    result.data.forEach(user=>{\n      fav.push(user);\n      })\n      fav=fav.slice(0,9);\n \n    setTodos(fav);\n  },[]);\n \n\n  const addTodo = (text) => {\n    const newTodos = [...todos, { text }];\n    setTodos(newTodos);\n  };\n\n  const completeTodo = index => {\n    const newTodos = [...todos];\n    newTodos[index].isCompleted = true;\n    setTodos(newTodos);\n  };\n\n  const removeTodo = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"todo-list\">\n        {todos.map((todo, index) => (\n          <Todo\n            key={index}\n            index={index}\n            todo={todo}\n            completeTodo={completeTodo}\n            removeTodo={removeTodo}\n          />\n        ))}\n        <Todoform addTodo={addTodo} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n",["35","36"],"/home/vivek/Documents/Byte_Academy/React/React-hooks- Todo/react-to-do/src/components/Todo.js",[],"/home/vivek/Documents/Byte_Academy/React/React-hooks- Todo/react-to-do/src/index.js",[],["37","38"],"/home/vivek/Documents/Byte_Academy/React/React-hooks- Todo/react-to-do/src/components/Todoform.js",[],"/home/vivek/Documents/Byte_Academy/React/React-hooks- Todo/react-to-do/src/components/Todolist.js",["39"],"import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\nimport SaveIcon from  '@material-ui/icons/Save'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport TextField from '@material-ui/core/TextField'\nimport { makeStyles, ThemeProvider , createMuiTheme} from '@material-ui/core/styles'\nimport { orange , green, red } from '@material-ui/core/colors'\nimport 'fontsource-roboto'; \nimport Typography from '@material-ui/core/Typography'\nimport Container from '@material-ui/core/Container'\n\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/core/Menu'\n\n\nconst useStyles = makeStyles({\n    root: {\n         background: 'linear-gradient(45deg, #333, #999)',\n         border: 0,\n         borderRadius: 15,\n         color: 'white',\n         padding:'0 30px',\n         marginBottom: 20\n    }\n})\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: orange[500]\n        },\n        secondary: {\n            main: green[400]\n        }\n    }\n})\n\nfunction ButtonStyled() {\n    const classes = useStyles();\n    return <Button className ={classes.root}>Test Styled Button</Button>\n}\n\n\nfunction Checkboxexample() {\n    const [checked, setchecked] = React.useState(true)\n    return (\n        <FormControlLabel\n        control = {<Checkbox \n            checked = {checked}\n            onChange={(e) => setchecked(e.target.checked)} />}\n        label=\"testing check box \"\n        />\n          \n      \n    )\n}\n\nfunction Todolist() {\n    return (\n        <ThemeProvider theme = {theme} >\n            <Container maxwidth=\"sm\">\n                {/* <div className=\"App\"> */}\n                    <header className=\"App-header\">\n                        <AppBar>\n                            <Toolbar>\n                            <Grid container spacing={10} justify=\"between\">\n                                <IconButton style ={{color:'black'}}>\n                                    <MenuIcon />\n                                </IconButton>\n                                <Grid item sm={1}>\n                                <Typography variant = \"h6\" >Home</Typography>\n                                </Grid>\n                                <Grid item sm={1}>\n                                <Typography variant = \"h6\" >Posts</Typography>\n                                </Grid>\n                                <Grid item sm={1}>\n                                <Typography variant = \"h6\" >Comments</Typography>\n                                </Grid>\n                                <Grid item sm={1}>\n                                <Typography variant = \"h6\" >Photos</Typography>\n                                </Grid>\n                                <Grid item sm={1}>\n                                <Typography variant = \"h6\" >Favourites</Typography>\n                                </Grid>\n                                </Grid>\n                            </Toolbar>\n                        </AppBar>\n                <div className = \"After-Nav\">\n                <Typography variant = \"h3\" >\n                    Welcome to MUI\n                </Typography>\n                <Typography variant = \"subtitle\">\n                    Welcome to MUI\n                </Typography>\n                <ButtonStyled/>\n                \n                <Grid container spacing={2} justify=\"start\">\n                <Grid item lg={4} sm={4}>\n                     <Paper style= {{ height:75, width:'100%', color:'red' }} >\n                         hi how are you </Paper>\n                </Grid>\n\n                <Grid item lg={4} sm={4} >\n                     <Paper style= {{ height:75, width:'100%', color:red }} />\n                </Grid>\n\n                <Grid item lg={4} sm={4}>\n                     <Paper style= {{ height:75, width:'100%', color:red }} />\n                </Grid>\n\n                </Grid>\n\n                <br/>\n                <TextField variant = \"outlined\" color=\"secondary\" type=\"Date\"/>\n                <br/>\n                <Checkboxexample/>\n                <br/>\n            <Button startIcon = {<SaveIcon />} variant=\"contained\" color=\"primary\">\n                Save\n            </Button>  \n            <Button startIcon = {<SaveIcon />} variant=\"contained\" color=\"secondary\">\n                Discard\n            </Button> \n                </div>\n            </header>\n            </Container>\n\n        </ThemeProvider>\n    )\n}\n\nexport default Todolist\n\n\n",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":5,"column":8,"nodeType":"46","messageId":"47","endLine":5,"endColumn":16},{"ruleId":"48","severity":1,"message":"49","line":24,"column":13,"nodeType":"50","endLine":36,"endColumn":4},{"ruleId":"40","replacedBy":"51"},{"ruleId":"42","replacedBy":"52"},{"ruleId":"40","replacedBy":"53"},{"ruleId":"42","replacedBy":"54"},{"ruleId":"44","severity":1,"message":"55","line":3,"column":8,"nodeType":"46","messageId":"47","endLine":3,"endColumn":19},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'Todolist' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression",["56"],["57"],["56"],["57"],"'ButtonGroup' is defined but never used.","no-global-assign","no-unsafe-negation"]